{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/LinkForm/LinkForm.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","Logo","settings","scale","LinkForm","onChange","onClick","type","placeholder","particleConfig","particles","shape","images","src","height","width","storke","color","detector","abortCurrent","this","worker","terminate","detectCats","canvas","document","querySelector","window","Worker","onmessage","onMessage","onerror","onError","resizes","kittydar","getAllSizes","postMessage","rects","paintCats","noun","length","console","log","clearRects","paintRects","getContext","clearRect","ctx","lineWidth","strokeStyle","i","rect","strokeRect","x","y","event","data","showProgress","cats","message","progress","App","setState","input","target","value","imgUrl","state","img","crossOrigin","onload","detectImage","drawToCanvas","max","Math","min","container","viewer","anno","drawImage","Image","url","id","params","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.426d4507.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css'\r\n\r\nconst Navigation = () => {\r\n    return(\r\n        <div className='flex justify-end'>\r\n            <p className='f4 dim ma3 pa4 washed-red pointer'>Sign Out</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport './Logo.css';\r\nimport Tilty from \"react-tilty\";\r\n\r\nconst Logo = () => {\r\n    return(\r\n        <div className=\"flex justify-center\">\r\n            <Tilty \r\n                className='tilty br-100 w4 h4 shadow-5'\r\n                settings={{\r\n                // glare: true,\r\n                scale: 1.05,\r\n                \"max-glare\": 0.5\r\n            }}>\r\n                <div className=\"inner i\">(=^･ω･^=)</div>\r\n            </Tilty>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './LinkForm.css';\r\n\r\nconst LinkForm = ({onChange, onClick}) => {\r\n    return(\r\n        <div>\r\n            <h2 className='mb4'>^  A Cat Face Recongnition  ^</h2>\r\n            <div className=\"flex justify-center mv4 pa4\">\r\n                <div className='w-40-l w-70 m pv4 ph3 br3 bg-washed-red shadow-5'>\r\n                    <input className='w-70-l w-60 pa2 bn f4' type='text' onChange={onChange} placeholder=' image address'></input>\r\n                    <button className='w-20-l w-30 pa2 f4 i link grow bn washed-red bg-darkblue' onClick={onClick}>Meow!</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LinkForm;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport LinkForm from \"./components/LinkForm/LinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Particles from \"react-particles-js\";\n// import { createCanvas, loadImage, Image } from \"canvas\";\nimport Script from \"react-load-script\";\n// import Canvas from './Canvas';\n\n// const canvas = createCanvas(200, 200);\n// const ctx = canvas.getContext(\"2d\");\n\n// // Write \"Awesome!\"\n// ctx.font = \"30px Impact\";\n// ctx.rotate(0.1);\n// ctx.fillText(\"Awesome!\", 50, 100);\n\n// // Draw line under text\n// var text = ctx.measureText(\"Awesome!\");\n// ctx.strokeStyle = \"rgba(0,0,0,0.5)\";\n// ctx.beginPath();\n// ctx.lineTo(50, 102);\n// ctx.lineTo(50 + text.width, 102);\n// ctx.stroke();\n\n// Draw cat with lime helmet\n// loadImage(\"./Silly-kitty-all-the-birds-went-south.jpg\").then(image => {\n//   ctx.drawImage(image, 50, 0, 70, 70);\n\n//   console.log('<img src=\"' + canvas.toDataURL() + '\" />');\n// });\n\nconst particleConfig = {\n  particles: {\n    shape: {\n      type: \"images\",\n      images: [{ src: \"./paw-solid.svg\", height: 20, width: 20 }],\n      storke: {\n        width: 3,\n        color: \"#F6FFFE\"\n      }\n    }\n  }\n};\n\nconst detector = {\n  abortCurrent: function() {\n    if (this.worker) {\n      this.worker.terminate();\n    }\n  },\n\n  detectCats: function() {\n    // $(\"#progress\").text(\"detecting cats...\");\n\n    var canvas = document.querySelector(\"#preview\");\n\n    if (window.Worker) {\n      var worker = new Worker(\"/library/detection-worker.js\");\n      worker.onmessage = this.onMessage;\n      worker.onerror = this.onError;\n\n      var resizes = window.kittydar.getAllSizes(canvas);\n      worker.postMessage(resizes);\n\n      this.worker = worker;\n    } else {\n      var rects = window.kittydar.detectCats(canvas);\n      this.paintCats(rects);\n    }\n  },\n\n  paintCats: function(rects) {\n    var noun = rects.length == 1 ? \"cat\" : \"cats\";\n    console.log(rects.length + \" \" + noun + \" detected\");\n\n    this.clearRects();\n    this.paintRects(rects, \"red\");\n  },\n\n  clearRects: function() {\n    var canvas = document.querySelector(\"#annotations\");\n    var ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  },\n\n  paintRects: function(rects, color) {\n    var canvas = document.querySelector(\"#annotations\");\n    var ctx = canvas.getContext(\"2d\");\n\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = color || \"red\";\n\n    for (var i = 0; i < rects.length; i++) {\n      var rect = rects[i];\n      ctx.strokeRect(rect.x, rect.y, rect.width, rect.height);\n    }\n  },\n\n  onMessage: function(event) {\n    var data = event.data;\n    console.log(\"onMessage\", event);\n    if (data.type === \"progress\") {\n      detector.showProgress(data);\n    } else if (data.type === \"result\") {\n      detector.paintCats(data.cats);\n    }\n  },\n\n  onError: function(event) {\n    console.log(\"Error from detection Worker:\", event.message);\n  },\n\n  showProgress: function(progress) {\n    console.log(\"progress\", progress);\n    this.paintRects(progress.rects, \"orange\");\n    // $(\"#progress\").text(\"detecting at \" + progress.size + \"px...\");\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.img = new Image();\n    this.state = {\n      input: \"\",\n      imgUrl: \"\"\n    };\n  }\n\n  onChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  onClick = () => {\n    this.setState({ imgUrl: this.state.input });\n    // debugger;\n\n    this.img.crossOrigin = \"anonymous\";\n\n    this.img.onload = () => {\n      this.detectImage(this.img);\n    };\n\n    this.img.src = this.state.input;\n\n    // var cats = window.kittydar.detectCats(canvas);\n    // console.log(\"there are\", cats.length, \"cats in this photo\");\n    // console.log(cats[0]);\n  };\n\n  drawToCanvas = img => {\n    var width = img.width;\n    var height = img.height;\n\n    var max = Math.max(width, height);\n    var scale = Math.min(max, 420) / max;\n\n    width *= scale;\n    height *= scale;\n\n    let container = document.querySelector(\"#viewer-container\");\n    let viewer = document.querySelector(\"#viewer\");\n    container.width = width;\n    container.height = height;\n    viewer.width = width;\n    viewer.height = height;\n\n    var anno = document.querySelector(\"#annotations\");\n    anno.width = width;\n    anno.height = height;\n\n    let canvas = document.querySelector(\"#preview\");\n    canvas.width = width;\n    canvas.height = height;\n\n    console.log(img.width, img.height, canvas, anno);\n    // draw image to preview canvas\n    let context = canvas.getContext(\"2d\");\n    context.drawImage(img, 0, 0, img.width, img.height, 0, 0, width, height);\n  };\n\n  detectImage = img => {\n    this.drawToCanvas(img);\n    detector.abortCurrent();\n    detector.detectCats();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <Test /> */}\n        <Navigation />\n        <Logo />\n        <Script url=\"/library/kittydar-0.1.0.min.js\" />\n        {/* /Silly-kitty-all-the-birds-went-south.jpg */}\n        <LinkForm onChange={this.onChange} onClick={this.onClick} />\n        <div id=\"viewer-container\" >\n          <div id=\"viewer\" >\n            <canvas id=\"preview\"></canvas>\n            <canvas id=\"annotations\"></canvas>\n          </div>\n        </div>\n        {/* <FaceRecognition /> */}\n        {/* <Canvas /> */}\n        <Particles className=\"particles\" params={particleConfig} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}